{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fswiss\fcharset0 ArialMT;\f2\fswiss\fcharset0 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red36\green38\blue41;\red161\green33\blue108;
\red104\green26\blue29;\red43\green39\blue19;\red2\green2\blue2;\red140\green83\blue65;\red38\green38\blue38;
\red245\green245\blue245;\red254\green228\blue200;\red60\green60\blue59;\red130\green130\blue130;\red60\green60\blue59;
\red17\green17\blue17;\red203\green0\blue77;\red9\green76\blue116;\red117\green66\blue151;\red95\green124\blue3;
\red240\green240\blue240;}
{\*\expandedcolortbl;;\csgray\c0;\cssrgb\c18824\c20000\c21176;\csgenericrgb\c63137\c12941\c42353;
\cssrgb\c49020\c15294\c15294;\cssrgb\c22353\c20000\c9412;\csgenericrgb\c784\c784\c784;\csgenericrgb\c54902\c32549\c25490;\cssrgb\c20000\c20000\c20000;
\cssrgb\c96863\c96863\c96863;\cssrgb\c100000\c91449\c82330;\cssrgb\c30196\c30196\c29804;\cssrgb\c58039\c58039\c58039;\cssrgb\c30196\c30196\c29804;
\cssrgb\c8627\c8627\c8627;\cssrgb\c84314\c0\c37255;\cssrgb\c0\c37255\c52941;\cssrgb\c53725\c34902\c65882;\cssrgb\c44314\c54902\c0;
\cssrgb\c95294\c95294\c95294;}
\deftab720
\pard\pardeftab720\sl300\partightenfactor0

\f0\fs40 \cf2 \expnd0\expndtw0\kerning0
clear && printf \cf4 '\\e[3J'\cf2  && \kerning1\expnd0\expndtw0 cargo build && RUST_BACKTRACE=\cf8 1\cf2  ./target/debug/crippled_god\
\pard\pardeftab963\pardirnatural\partightenfactor0
\
\pard\pardeftab720\sl300\partightenfactor0
\expnd0\expndtw0\kerning0
clear && printf \cf4 '\\e[3J'\cf2  && \kerning1\expnd0\expndtw0 cargo test\
\pard\pardeftab720\sl380\partightenfactor0

\fs27\fsmilli13600 \cf9 \expnd0\expndtw0\kerning0
\
curl -s https://static.rust-lang.org/rustup.sh | sh -s -- --channel=nightly\cb10 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0

\fs36 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 cargo doc --open\cb11 \

\fs28 \cf12 \cb1 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\pardeftab720\sl420\partightenfactor0
\cf13 \outl0\strokewidth0 \strokec13 http://www.roguebasin.com\cf14 \strokec14 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0
\cf12 \outl0\strokewidth0 https://www.reddit.com/r/roguelikedev\
\pard\pardeftab720\sl420\partightenfactor0
\cf12 \
\pard\pardeftab720\sl320\partightenfactor0

\f1\fs42 \cf15 reserve letters for creatures, \
the "symbols above the number keys" for items, \
and the less recognized unicode characters for things like map features, etc\

\fs28 \

\f0 \cf12 \
\pard\pardeftab720\sl420\partightenfactor0
\cf16 pub\cf12  \cf16 struct\cf12  Square \{\
    \cf16 pub\cf12  symbol: \cf16 char\cf12 ,\
    \cf16 pub\cf12  back_color: Color,\
    \cf16 pub\cf12  fore_color: Color,\
\
\cf16 pub\cf12  \cf16 struct\cf12  Map \{\
    \cf16 pub\cf12  width: \cf16 usize\cf12 ,\
    \cf16 pub\cf12  height: \cf16 usize\cf12 ,\
    \cf16 pub\cf12  default: Square,\
\
\cf16 impl\cf12  Map \{\
    \cf16 pub\cf12  \cf16 fn\cf12  \cf17 with_default\cf12 (default: &Square) -> \cf16 Self\cf12  \{\
    \cf16 pub\cf12  \cf16 fn\cf12  \cf17 with_size\cf12 (width: \cf16 usize\cf12 , height: \cf16 usize\cf12 , default: &Square) -> \cf16 Self\cf12  \{\
    \cf16 pub\cf12  \cf16 fn\cf12  \cf17 get_square\cf12 (&\cf18 self\cf12 , x: \cf16 usize\cf12 , y: \cf16 usize\cf12 ) -> &Square \{\
    \cf16 pub\cf12  \cf16 fn\cf12  \cf17 set_square\cf12 (&\cf16 mut\cf12  \cf18 self\cf12 , x: \cf16 usize\cf12 , y: \cf16 usize\cf12 , s: &Square) \{\
\
\cf16 pub\cf12  \cf16 fn\cf12  \cf17 generate_open\cf12 (rng: &\cf16 mut\cf12  rand::StdRng) -> map::Map \{\
\
\
    \cf16 let\cf12  open = map::Square \{\
        symbol: \cf19 '.'\cf12 ,\
        back_color: ,\
        fore_color: game::Color::LightGrey,\
    \};\
\
    \cf16 let\cf12  wall = map::Square \{\
        symbol: \cf19 '#'\cf12 ,\
        back_color: game::Color::SaddleBrown,\
        fore_color: game::Color::SaddleBrown,\
    \};\
\
    \cf16 let\cf12  water = map::Square \{\
        symbol: \cf19 'w'\cf12 ,\
        back_color: game::Color::DodgerBlue,\
        fore_color: game::Color::DodgerBlue,\
    \};\
\
\cf16 pub\cf12  \cf16 struct\cf12  Tile \{\
    symbol: \cf16 char\cf12 ,\
\'a0\'a0\'a0\'a0fg: game::Color,\
\'a0\'a0\'a0\'a0bg: game::Col\cb20 or,\cb1 \
\cb20 \}\
\
\pard\pardeftab720\sl420\partightenfactor0
\cf12 \cb1 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0

\f2\fs48 \cf7 \kerning1\expnd0\expndtw0 \
\
feature\
	stair\
	altar\
	fountain\
	\
* Add an output window\
	- for now maybe just something like \'93You splash through the water.\'94\
	- should echo this to logs\
* Persist the game\
	- store keystrokes and the random number seed\
	- make sure that the rng is deterministic\
* Start using clippy\
* Add multiple levels\
	- need stairs \
		` need to handle keys somehow\
	- use serde to persist levels\
* Add basic monsters\
* Add simple combat\
* Add items\
* Add sword of the crippled god\
* Add hood on level 1\
* Add high score support\
* Add support for large maps, i.e. scrolling as the player moves\
* Review old notes:\
	ShieldAnvil\
	CrippledGod		\
	BurnsHammer\
* Play some other games\
	Brogue\
	Caves of Qud\
	Dwarf Fortress\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0

\fs24 \cf0 \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0

\fs48 \cf7 spam Beastly Appendage\
train Transmutations until Spider Form is 80% reliable\
	note that this makes you vulnerable to poison\
train Unarmed Combat until 10\
goto spells\
	Spider Form  +evasion\
	Blade Hands +damage, +hunger (dont use with hydras)\
	Ice Form        +poison, +++cold, -fire, slows cold-blooded, float\
	Dragon Form iffy\
	Haste\
	Phase Shift\
	Controlled Blink\
train dodge until 20\
pick Intelligence\
}